name: ArgoCD Frontend Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  ACR_NAME: acrdigitalgarage01
  ACR_REGISTRY: acrdigitalgarage01.azurecr.io

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Set environment variables
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV
        fi
        echo "IMAGE_TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Run lint
      run: npm run lint

    - name: Login to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ACR_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push image
      run: |
        echo "Building phonebill-front image..."
        docker build \
          -f deployment/container/Dockerfile-frontend \
          --build-arg PROJECT_FOLDER="." \
          --build-arg BUILD_FOLDER="deployment/container" \
          --build-arg EXPORT_PORT="8080" \
          -t ${{ env.ACR_REGISTRY }}/phonebill/phonebill-front:${{ env.ENVIRONMENT }}-${{ env.IMAGE_TAG }} .

        echo "Pushing phonebill-front image..."
        docker push ${{ env.ACR_REGISTRY }}/phonebill/phonebill-front:${{ env.ENVIRONMENT }}-${{ env.IMAGE_TAG }}

    - name: Update manifest repository
      env:
        GIT_TOKEN: ${{ secrets.MANIFEST_GITHUB_TOKEN }}
        GIT_USERNAME: ${{ secrets.MANIFEST_GITHUB_USERNAME }}
      run: |
        # 매니페스트 레포지토리 클론
        REPO_URL=$(echo "https://github.com/cna-bootcamp/phonebill-manifest.git" | sed 's|https://||')
        git clone https://${GIT_USERNAME}:${GIT_TOKEN}@${REPO_URL} manifest-repo
        cd manifest-repo

        # 프론트엔드 이미지 태그 업데이트 (sed 명령 사용)
        echo "Updating phonebill-front image tag..."
        sed -i "s|image: ${{ env.ACR_REGISTRY }}/phonebill/phonebill-front:.*|image: ${{ env.ACR_REGISTRY }}/phonebill/phonebill-front:${{ env.ENVIRONMENT }}-${{ env.IMAGE_TAG }}|g" \
          phonebill-front/kustomize/base/deployment.yaml

        # 변경 사항 확인
        echo "Updated phonebill-front deployment.yaml:"
        grep "image: ${{ env.ACR_REGISTRY }}/phonebill/phonebill-front" phonebill-front/kustomize/base/deployment.yaml

        # Git 설정 및 푸시
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add .
        git commit -m "🚀 Update phonebill-front ${{ env.ENVIRONMENT }} image to ${{ env.ENVIRONMENT }}-${{ env.IMAGE_TAG }}"
        git push origin main

        echo "✅ 프론트엔드 매니페스트 업데이트 완료. ArgoCD가 자동으로 배포합니다."